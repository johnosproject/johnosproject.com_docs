"use strict";(self.webpackChunkjosp_docs=self.webpackChunkjosp_docs||[]).push([[2436],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var n=r(67294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var s=n.createContext({}),i=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=i(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=i(r),m=l,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return r?n.createElement(h,o(o({ref:t},c),{},{components:r})):n.createElement(h,o({ref:t},c))}));function h(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=r.length,o=new Array(a);o[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:l,o[1]=p;for(var i=2;i<a;i++)o[i]=r[i];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},66817:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>p,toc:()=>i});var n=r(87462),l=(r(67294),r(3905));const a={title:"Puller Shell"},o="JOD Worker Puller Shell",p={unversionedId:"jod/specs/workers/puller_shell",id:"jod/specs/workers/puller_shell",title:"Puller Shell",description:"Each `freq` seconds, this puller execute the `cmd` using the JavaExecProcess::execCmd(String cmd) method , then update the JOD State.",source:"@site/3_references/1_josp/1_jod/4_specs/6_workers/puller_shell.mdx",sourceDirName:"1_jod/4_specs/6_workers",slug:"/jod/specs/workers/puller_shell",permalink:"/references/josp/jod/specs/workers/puller_shell",draft:!1,tags:[],version:"current",frontMatter:{title:"Puller Shell"},sidebar:"referencesSidebar",previous:{title:"Puller Http",permalink:"/references/josp/jod/specs/workers/puller_http"},next:{title:"Puller UnixShell",permalink:"/references/josp/jod/specs/workers/puller_unixshell"}},s={},i=[{value:"Firmware Configs",id:"firmware-configs",level:2},{value:"<code>cmd</code>",id:"cmd",level:3},{value:"<code>freq</code>",id:"freq",level:3},{value:"Examples",id:"examples",level:2}],c={toc:i},u="wrapper";function d(e){let{components:t,...r}=e;return(0,l.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"jod-worker-puller-shell"},"JOD Worker Puller Shell"),(0,l.kt)("p",null,"Each ",(0,l.kt)("inlineCode",{parentName:"p"},"freq")," seconds, this puller execute the ",(0,l.kt)("inlineCode",{parentName:"p"},"cmd")," using the ",(0,l.kt)("a",{parentName:"p",href:"https://bitbucket.org/johnosproject_shared/com.robypomper.josp/src/2.2.1/src/jospCommons/java/com/robypomper/java/JavaExecProcess.java#lines-80"},"JavaExecProcess::execCmd(String cmd)")," method , then update the ",(0,l.kt)("a",{parentName:"p",href:"../pillars#state"},"JOD State"),"."),(0,l.kt)("p",null,"Before execute the command, the ",(0,l.kt)("inlineCode",{parentName:"p"},"cmd")," string is updated and all his placeholder are replaced with current ",(0,l.kt)("a",{parentName:"p",href:"workers_placeholders#pillar"},"Pillar")," and ",(0,l.kt)("a",{parentName:"p",href:"workers_placeholders#state"},"State")," properties.",(0,l.kt)("br",null),"\nOnce executed the shell command, it takes his output and pass it as new Pillar's state, independently to the Pillar's type."),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"firmware-configs"},"Firmware Configs"),(0,l.kt)("h3",{id:"cmd"},(0,l.kt)("inlineCode",{parentName:"h3"},"cmd")),(0,l.kt)("p",null,"String containing the shell command to execute via ",(0,l.kt)("a",{parentName:"p",href:"https://bitbucket.org/johnosproject_shared/com.robypomper.josp/src/2.2.1/src/jospCommons/java/com/robypomper/java/JavaExecProcess.java#lines-80"},"JavaExecProcess::execCmd(String cmd)")," method. ",(0,l.kt)("strong",{parentName:"p"},"It's mandatory.")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"cmd")," string can contain any available command on running machine and his all params.",(0,l.kt)("br",null),"\nIt also support piped command (",(0,l.kt)("inlineCode",{parentName:"p"},"|"),") for example ",(0,l.kt)("inlineCode",{parentName:"p"},"echo \"hello world\" | sed 's/world/john/g'"),"."),(0,l.kt)("p",null,"Following redirects ar not supported:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"cmd >> out.txt")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"cmd > out.txt")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"cmd &> out.txt")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"cmd > out.txt 2> err.txt"))),(0,l.kt)("p",null,"This property is updated with ",(0,l.kt)("a",{parentName:"p",href:"workers_placeholders#pillar"},"Pillar's Placeholder")," on worker initialization and with ",(0,l.kt)("a",{parentName:"p",href:"workers_placeholders#state"},"State Placeholder")," on pulling state."),(0,l.kt)("h3",{id:"freq"},(0,l.kt)("inlineCode",{parentName:"h3"},"freq")),(0,l.kt)("p",null,"Pulling frequency in seconds. By default '5'."),(0,l.kt)("p",null,"This property is updated with ",(0,l.kt)("a",{parentName:"p",href:"workers_placeholders#pillar"},"Pillar's Placeholder")," on worker initialization."),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="struct.jod: BoolenState/Shell"',title:'"struct.jod:','BoolenState/Shell"':!0},'"State On/Off" : {\n    "type": "BooleanState",\n    "puller" : "shell://cmd=osascript -e \'output muted of (get volume settings)\';freq=1"\n}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="struct.jod: RangeState/Shell @ JOD PC Linux"',title:'"struct.jod:',"RangeState/Shell":!0,"@":!0,JOD:!0,PC:!0,'Linux"':!0},'"CPU MPStat" : {\n    "type": "RangeState",\n    "puller" : "shell://cmd=scripts/hw/cpu_mpstat.sh;freq=30",\n    "min": "0",\n    "max": "100"\n}\n')))}d.isMDXComponent=!0}}]);