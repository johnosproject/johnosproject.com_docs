"use strict";(self.webpackChunkjosp_docs=self.webpackChunkjosp_docs||[]).push([[4691],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},33612:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const i={},o="Object Structure",s={unversionedId:"create_your_own_jod_distribution/configuration/object_structure",id:"create_your_own_jod_distribution/configuration/object_structure",title:"Object Structure",description:"The most important configuration in a JOD Distribution is the `struct.jod` file. This file contains the structure of JOSP Object exposed by any installation of our distribution. Then that structure will be used by JOSP Service developers to understand and interact with the JOSP Object.",source:"@site/3_references/5_tools/1_jod_dist_template/2_create_your_own_jod_distribution/3_configuration/3_object_structure.mdx",sourceDirName:"2_create_your_own_jod_distribution/3_configuration",slug:"/create_your_own_jod_distribution/configuration/object_structure",permalink:"/references/tools/jod_dist_template/create_your_own_jod_distribution/configuration/object_structure",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"toolsSidebar",previous:{title:"Object Configs",permalink:"/references/tools/jod_dist_template/create_your_own_jod_distribution/configuration/object_configs"},next:{title:"Object PRE-POST scripts",permalink:"/references/tools/jod_dist_template/create_your_own_jod_distribution/configuration/pre_post_scripts"}},l={},c=[{value:"Static or dynamic structure",id:"static-or-dynamic-structure",level:2},{value:"Object info",id:"object-info",level:2},{value:"Object structure",id:"object-structure-1",level:2},{value:"Containers",id:"containers",level:3},{value:"States and Actions",id:"states-and-actions",level:3},{value:"Pillars",id:"pillars",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"object-structure"},"Object Structure"),(0,a.kt)("p",null,"The most important configuration in a JOD Distribution is the ",(0,a.kt)("inlineCode",{parentName:"p"},"struct.jod")," file. This file contains the structure of JOSP Object exposed by any installation of our distribution. Then that structure will be used by JOSP Service developers to understand and interact with the JOSP Object."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"It's extremely important to design this structure well, so that the resulting object can be used by as many services as possible.")),(0,a.kt)("p",null,"This file contains both object's info and structure."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Object's info")," contained in this file are used to identify the JOSP Object's model among all other objects connected to the JOSP EcoSystem. Those configs must different for one JOD Distribution and another, but remain identical between different versions of the same dist.",(0,a.kt)("br",null),"\nThe ",(0,a.kt)("strong",{parentName:"p"},"object's structure")," contained in the ",(0,a.kt)("inlineCode",{parentName:"p"},"struct.jod")," file is a hierarchical list of the features that the JOD Agent must expose to the JOSP EcoSystem.",(0,a.kt)("br",null),"\nEach feature can be defined as a State or an Action. States can wait for firmware's value updates and update JOSP Services on value changes. Actions are like States, but they can also receive commands requests from JOSP Services and translate those command to firmware calls.",(0,a.kt)("br",null)),(0,a.kt)("img",{alt:"JOD Distribution TEMPLATE Build process diagram",src:"/references/josp/jod/specs/JODDistTMPL_ActionStates.png",title:"JOD Distribution TEMPLATE Build process",style:{maxHeight:"600px",display:"block",marginLeft:"auto",marginRight:"auto"}}),(0,a.kt)("br",null),(0,a.kt)("p",null,"States and Actions, depending on what they must expose to the JOSP EcoSystem, they can be of different types. We call this types ",(0,a.kt)("strong",{parentName:"p"},"Pillars"),".",(0,a.kt)("br",null),"\nFor example if you are designing a JOD Distribution for a connected lamp, probably you would expose the On/Off control as object's feature. To do that, you must add a ",(0,a.kt)("inlineCode",{parentName:"p"},"BooleanAction"),' pillar to the object\'s structure. Then configure it as "On/Off switch".',(0,a.kt)("br",null),"\nOtherwise, if the feature that you would expose is like the environment temperature, then you must add a ",(0,a.kt)("inlineCode",{parentName:"p"},"RangeState")," pillar to object's structure.",(0,a.kt)("br",null),"\nMore details and examples on ",(0,a.kt)("a",{parentName:"p",href:"#states-and-actions"},"States and Actions")," and ",(0,a.kt)("a",{parentName:"p",href:"#pillars"},"Pillars")," chapters."),(0,a.kt)("p",null,"Pillars configuration allow the JOD Agent to ",(0,a.kt)("strong",{parentName:"p"},"expose the feature to JOSP Services")," exactly as you desire, and on the other side, ",(0,a.kt)("strong",{parentName:"p"},"use the right firmware calls")," to interact with external world like hardware sensors and actuators. The JOD Agent is very flexible and can interact, not only with hardware peripherals, but also with other software, websites or anything you require. Pillars can be configured to use different firmware interfaces depending on your needs."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"static-or-dynamic-structure"},"Static or dynamic structure"),(0,a.kt)("p",null,"A JOD Distribution can always use the same ",(0,a.kt)("inlineCode",{parentName:"p"},"struct.jod")," file, so all his JOSP Objects will have the same structure. This is the common case when the JOD Distribution represent a real object like a lamp, a gate, etc... Other distributions will use ",(0,a.kt)("strong",{parentName:"p"},"dynamic ",(0,a.kt)("inlineCode",{parentName:"strong"},"struct.jod")," files, generated during the JOD object startup"),". That allow you to customize object's structure depending on running environment."),(0,a.kt)("p",null,"Dynamic object's structure is useful to add ",(0,a.kt)("strong",{parentName:"p"},"specific configuration to your distribution"),". For example to replace some placeholder from a template ",(0,a.kt)("inlineCode",{parentName:"p"},"struct.jod")," file."),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"/references/jod_dists/jod_meteo_web/"},"JOD Mete Web")," distribution, that expose a meteo object retrieve his states from the OpenWeatherMap APIs, provide the ",(0,a.kt)("inlineCode",{parentName:"p"},"JOD_MWO_LOCATION")," property to allow end user set the location used to query meteo values at OpenWeatherMap APIs."),(0,a.kt)("p",null,"Dynamic object's structure is also useful when your distribution is representing an industrial gateway, or a smart home hub that ",(0,a.kt)("strong",{parentName:"p"},"connect multiple devices at once"),". In this case, you can scan available devices and generate corresponding JOSP object's structure before the JOD object startup."),(0,a.kt)("p",null,"Good examples for this case are the ",(0,a.kt)("a",{parentName:"p",href:"/references/jod_dists/jod_philips_hue/"},"JOD Philips Hue")," and ",(0,a.kt)("a",{parentName:"p",href:"/references/jod_dists/jod_mbus/"},"JOD MBus")," distribution that represent respectively a Philips Hue Hub and a MBus protocol interface"),(0,a.kt)("p",null,"To implement this feature on your JOD Distribution simply add object's structure generation code to ",(0,a.kt)("inlineCode",{parentName:"p"},"pre-startup")," script of your distribution. More info at ",(0,a.kt)("a",{parentName:"p",href:"pre_post_scripts"},"PRE-POST Scripts"),"."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"object-info"},"Object info"),(0,a.kt)("p",null,"Object's info are related to your specific JOD Distribution."),(0,a.kt)("p",null,"From JOSP Service developers, they are intended as model info exposed by JOSP Objects; and can help them to identify connected objects."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"model"),": unique name that identify your distribution"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"brand"),": unique name that identify yourself or hardware manufacturer"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"descr"),": sort object description"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"descr_long"),": detailed object description"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"contains"),": the object's structure, contains is the root container")),(0,a.kt)("p",null,"Here an example of a complete object's info section in a ",(0,a.kt)("inlineCode",{parentName:"p"},"struct.jod")," file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="JOD PC Mac/configs/struct.jod"',title:'"JOD',PC:!0,'Mac/configs/struct.jod"':!0},'{\n    "model": "MacOS JOSP Object",\n    "brand": "Apple Inc.",\n    "descr": "A MacOS computer that expose his features to JOSP\'s services.",\n    "descr_long": "This object can be used to control remotely functions as system volume, lightning, keyboard, mouse, etc...",\n    "contains": {\n      // Object\'s structure\n  }\n}\n')),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"object-structure-1"},"Object structure"),(0,a.kt)("p",null,"Object's structure is a hierarchical list of object's features."),(0,a.kt)("p",null,"In the ",(0,a.kt)("inlineCode",{parentName:"p"},"struct.jod")," file, each feature is defined as a Pillar element. Pillars can be contained in Container elements. The ",(0,a.kt)("inlineCode",{parentName:"p"},"contains")," element from ",(0,a.kt)("inlineCode",{parentName:"p"},"struct.jod")," files is the root container of the object's structure. Container can contain other containers and create multi-level hierarchy."),(0,a.kt)("img",{alt:"JOD Distribution TEMPLATE Build process diagram",src:"/references/josp/jod/specs/JODDistTMPL_Struct.png",title:"JOD Distribution TEMPLATE Build process",style:{maxHeight:"600px",display:"block",marginLeft:"auto",marginRight:"auto"}}),(0,a.kt)("br",null),(0,a.kt)("p",null,"Here an example of complete ",(0,a.kt)("inlineCode",{parentName:"p"},"struct.jod")," file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="MyDist/configs/struct.jod"',title:'"MyDist/configs/struct.jod"'},'{\n    "model": "My Distribution",\n    "brand": "MyMyselfAndI",\n    "descr": "A _full_ featured IoT Object that expose _all_ data and _all_ remote controls to the JOSP EcoSystem",\n    "descr_long": "Long and more detailed configs",\n    "contains": {\n        "Container A" : {\n            "type": "JODContainer",\n            "contains": {\n                "Pillar A" : {\n                    "type": "PillarType",\n                    // PillarType specific configs for Feature A\n                },\n                "Pillar B" : {\n                    "type": "PillarType",\n                    // PillarType specific configs for Feature B\n                }\n            }\n        },\n        "Container B" : {\n            "type": "JODContainer",\n            "contains": {\n                "Pillar ..." : {\n                    "type": "PillarType",\n                    // PillarType specific configs for Feature ...\n                }\n            }\n        },\n  }\n}\n')),(0,a.kt)("p",null,"Please customize the main ",(0,a.kt)("inlineCode",{parentName:"p"},"contains")," section according to the JOSP Object's structure you would expose with your JOD Distribution."),(0,a.kt)("h3",{id:"containers"},"Containers"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"JODContainers"),"'s name is defined by the element name, so in the following example you define a container called 'MainLamp'."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="struct.json: container example',title:'"struct.json:',container:!0,example:!0},'    // ...\n    "MainLamp" : {\n        "type": "JODContainer",\n        "contains": {\n            // Pillars list or other container\n        }\n    },\n    // ...\n')),(0,a.kt)("h3",{id:"states-and-actions"},"States and Actions"),(0,a.kt)("p",null,"In a JOSP Objects, each exposed feature is defined as a State or an Action. States can wait for firmware's value updates and update JOSP Services on value changes. Actions are like States, but they can also receive commands requests from JOSP Services and translate those command to firmware calls.",(0,a.kt)("br",null)),(0,a.kt)("p",null,"Because each State/Action is defined in the object's structure as a Pillar, then Pillar's configuration provide 3 special properties:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"listener"),": define firmware calls for listener's states and actions"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"puller"),": define firmware calls for puller's states and actions"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"executor"),": define firmware calls used by actions whene receive a command request")),(0,a.kt)("p",null,"Each pillar configuration must include at least one of the two ",(0,a.kt)("inlineCode",{parentName:"p"},"listener")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"puller")," properties. Only Action pillars must set also ",(0,a.kt)("inlineCode",{parentName:"p"},"executor")," property."),(0,a.kt)("p",null,"Those properties accept a string formatted with following pattern:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"{FirmwareProto}://{FirmwareConfigs}\n")),(0,a.kt)("p",null,"Where the ",(0,a.kt)("inlineCode",{parentName:"p"},"FirmwareProto")," must be one of the ",(0,a.kt)("strong",{parentName:"p"},"FirmwareProtocols registered in the ",(0,a.kt)("a",{parentName:"strong",href:"#jod-agent-configs"},"JOD Agent configs"))," file with the properties ",(0,a.kt)("inlineCode",{parentName:"p"},"jod.executor_mngr.pullers|listeners|executors"),". By default, the JOD Distribution TEMPLATE sets following firmware protocols:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Pullers:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/references/josp/jod/specs/workers/puller_shell"},"Shell"),": On pulling, execute bash or powershell commands and use their output as state's value"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/references/josp/jod/specs/workers/puller_http"},"Http"),": On pulling, query configured url and parse the response as state's value"))),(0,a.kt)("li",{parentName:"ul"},"Listeners:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/references/josp/jod/specs/workers/listener_file"},"File"),": On startup, start a watchdog service that listen for configured file changes; when the file is updated use his content as state's value"))),(0,a.kt)("li",{parentName:"ul"},"Executors:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/references/josp/jod/specs/workers/executor_shell"},"Shell"),": on action request received, execute configured bash or powershell command"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/references/josp/jod/specs/workers/executor_file"},"File"),": on action request received, write configured value to a file"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"//references/josp/jod/specs/workers/executor_http"},"Http"),": on action request received, query configured url")))),(0,a.kt)("p",null,"In the following example we defined a 'Temperature' state, that pull every ",(0,a.kt)("inlineCode",{parentName:"p"},"freq")," ('600') seconds the ",(0,a.kt)("inlineCode",{parentName:"p"},"requestUrl"),"() url and retrieve the temperature value. The ",(0,a.kt)("inlineCode",{parentName:"p"},"puller")," property is set to use the 'http' firmware protocol and pass him the configs string (everything after the '://' separator). In this case the 'http' firmware require the ",(0,a.kt)("inlineCode",{parentName:"p"},"requestUrl")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"freq")," params among others. More details on firmware protocols params on the next section."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:"title=\"struct.json: RangeState puller 'http' example\"",title:'"struct.json:',RangeState:!0,puller:!0,"'http'":!0,'example"':!0},'    // ...\n    "Temperature" : {\n        "type": "RangeState",\n        "puller" : "http://requestUrl=\'https://api.openweathermap.org/data/2.5/weather?q=rome&units=metric&appid=03317c1f2de6827424efd170890ffd3c\';formatType=JSON;formatPath=\'$.main.temp\';formatPathType=JSONPATH;freq=600",\n        "min": "-50",\n        "max": "100"\n    },\n    // ...\n')),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"pillars"},"Pillars"),(0,a.kt)("p",null,"Pillars are the base config element for each feature exposed by a JOSP Object to the JOSP Services. They act as a bridge between the JOSP EcoSystem and the external world."),(0,a.kt)("p",null,"On JOSP side, they expose all details required to JOSP Services to interact with it. On the other side, they configure the object's firmware to interact with hardware, other software, make web request or anything else you require."),(0,a.kt)("p",null,"Because of that, Pillars configs can be split in 2 groups:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"specific pillar's configs: depending on pillar type different properties become available."),(0,a.kt)("li",{parentName:"ul"},"state/action configs: includes the ",(0,a.kt)("inlineCode",{parentName:"li"},"listener"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"puller")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"executor")," properties.")),(0,a.kt)("p",null,"For detailed Pillar's configuration please check the Pillar's docs on JOD references:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/references/josp/jod/specs/pillars/boolean"},"Boolean"),":",(0,a.kt)("br",null),"\nexpose status like Open/Closed, Empty/Full, Enable/Disabled; or actions like On/Off, Fill/Empty, Mute/Unmute..."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/references/josp/jod/specs/pillars/range"},"Range"),":",(0,a.kt)("br",null),"\nexpose status like Temperature, Absorbed power; or actions Control volume, Light dimming...")))}d.isMDXComponent=!0}}]);