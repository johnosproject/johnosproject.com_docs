"use strict";(self.webpackChunkjosp_docs=self.webpackChunkjosp_docs||[]).push([[3551],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,g=u["".concat(i,".").concat(d)]||u[d]||m[d]||l;return n?a.createElement(g,o(o({ref:t},c),{},{components:n})):a.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},80965:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const l={title:"Range"},o="JOD Pillar Range",s={unversionedId:"jod/specs/pillars/range",id:"jod/specs/pillars/range",title:"Range",description:"The range pillar can represent a value in a range. Range states can represent a number (with flating point)",source:"@site/3_references/1_josp/1_jod/4_specs/5_pillars/3_range.mdx",sourceDirName:"1_jod/4_specs/5_pillars",slug:"/jod/specs/pillars/range",permalink:"/references/josp/jod/specs/pillars/range",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Range"},sidebar:"referencesSidebar",previous:{title:"Boolean",permalink:"/references/josp/jod/specs/pillars/boolean"},next:{title:"JOD Workers",permalink:"/references/josp/jod/specs/workers/"}},i={},p=[{value:"Fields",id:"fields",level:2},{value:"Examples",id:"examples",level:2}],c={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"jod-pillar-range"},"JOD Pillar Range"),(0,r.kt)("p",null,"The range pillar can represent a value in a range. Range states can represent a number (with flating point)"),(0,r.kt)("p",null,"Range state value can be any number like integer or floating.\nState Range's value is stored by JOD instance as ",(0,r.kt)("inlineCode",{parentName:"p"},"double")," variable (a double-precision 64-bit IEEE 754 floating point) and encoded to JOSP messages with the ",(0,r.kt)("a",{parentName:"p",href:"https://bitbucket.org/johnosproject_shared/com.robypomper.josp/src/2.2.1/src/jospCommons/java/com/robypomper/java/JavaFormatter.java#lines-85"},"JavaFormatter::doubleToStr()")," method."),(0,r.kt)("p",null,"An example for a ",(0,r.kt)("strong",{parentName:"p"},"Pillar Range State")," can be a temperature sensor that provide values between ",(0,r.kt)("inlineCode",{parentName:"p"},"-20")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"100")," (\xb0C).\nThis pillar send a status update message to JOSP Services every time sensord detect a different temperature."),(0,r.kt)("p",null,"Meanwhile the example for a ",(0,r.kt)("strong",{parentName:"p"},"Pillar Range Action")," can be a dimmerable lamp with a ",(0,r.kt)("inlineCode",{parentName:"p"},"Bringness")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Darkness")," actions.\nJOSP Service can send action request to this pillar to set specific value, increase/decrease current value, set min/max current value."),(0,r.kt)("p",null,"You can use this Pillar to expose hundreds of different features representing them as Range states and actions like temperatures, speaker volumes, resource usage..."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Range State can be configured to use any kind of Workers as ",(0,r.kt)("a",{parentName:"strong",href:"../workers#listeners"},"listener")," or ",(0,r.kt)("a",{parentName:"strong",href:"../workers#pullers"},"puller"),"."),"\nBecause all Listeners and Pullers use the AbsJODWorker::convertAndSetStatus(String) method to parse and update current pillar status (independently to the pillar type)."),(0,r.kt)("p",null,"On the other side, the ",(0,r.kt)("strong",{parentName:"p"},"Range Actions can be configured to use as executor only Workers that implements the ",(0,r.kt)("inlineCode",{parentName:"strong"},"JODRangeAction.JOSPRange.Executor")," interface"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/references/josp/jod/specs/workers/executor_shell"},"Shell"),": on action request received, execute configured bash or powershell command"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/references/josp/jod/specs/workers/executor_file"},"File"),": on action request received, write configured value to a file"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"//docs/references/josp/jod/specs/workers/executor_http"},"Http"),": on action request received, query configured url")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"fields"},"Fields"),(0,r.kt)("p",null,"The Boolean Pillar can be configured with following fields:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Name")),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the component. This filed is always set as JSON element's name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Descr")),(0,r.kt)("td",{parentName:"tr",align:null},"The description of the component.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Type")),(0,r.kt)("td",{parentName:"tr",align:null},"The component type. It must be ",(0,r.kt)("inlineCode",{parentName:"td"},"BooleanState"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Min")),(0,r.kt)("td",{parentName:"tr",align:null},"The minimum value reachable.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Max")),(0,r.kt)("td",{parentName:"tr",align:null},"The maximum value reachable.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Step")),(0,r.kt)("td",{parentName:"tr",align:null},"The step value is used to increase/decrease current value by correspective actions.")))),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="struct.jod: RangeState/File @ JOD PC Windows"',title:'"struct.jod:',"RangeState/File":!0,"@":!0,JOD:!0,PC:!0,'Windows"':!0},'"CPU" : {\n    "type": "RangeState",\n    "listener" : "file://path=status/cpu.txt",\n    "min": "0",\n    "max": "100"\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="struct.jod: RangeState/Shell @ JOD PC Linux"',title:'"struct.jod:',"RangeState/Shell":!0,"@":!0,JOD:!0,PC:!0,'Linux"':!0},'"CPU MPStat" : {\n    "type": "RangeState",\n    "puller" : "shell://cmd=scripts/hw/cpu_mpstat.sh;freq=30",\n    "min": "0",\n    "max": "100"\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="struct.jod: RangeState/Http @ JOD Meteo Web"',title:'"struct.jod:',"RangeState/Http":!0,"@":!0,JOD:!0,Meteo:!0,'Web"':!0},'"Temperature" : {\n    "type": "RangeState",\n    "puller" : "http://requestUrl=\'https://api.openweathermap.org/data/2.5/weather?q=${JOD_MWO_LOCATION}&units=metric&appid=03317c1f2de6827424efd170890ffd3c\';formatType=JSON;formatPath=\'$.main.temp\';formatPathType=JSONPATH;freq=600",\n    "min": "-50",\n    "max": "100"\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="struct.jod: RangeAction/File @ JOD Struct default file"',title:'"struct.jod:',"RangeAction/File":!0,"@":!0,JOD:!0,Struct:!0,default:!0,'file"':!0},'"Action 0-50" : {\n    "type": "RangeAction",\n    "listener" : "file://path=status/%C_NAME%_State.txt",\n    "executor" : "file://path=status/%C_NAME%_State.txt",\n    "min": "0",\n    "max": "50",\n    "step": "5"\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="struct.jod: RangeAction/Shell @ JOD PC Mac"',title:'"struct.jod:',"RangeAction/Shell":!0,"@":!0,JOD:!0,PC:!0,'Mac"':!0},'"Volume" : {\n    "type": "RangeAction",\n    "puller" : "shell://cmd=osascript -e \'output volume of (get volume settings)\';freq=1",\n    "executor" : "shell://cmd=osascript -e \'set volume output volume %VAL%\'",\n    "min": "0",\n    "max": "100",\n    "step": "5"\n},\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="struct.jod: RangeAction/Http @ JOD Philips Hue"',title:'"struct.jod:',"RangeAction/Http":!0,"@":!0,JOD:!0,Philips:!0,'Hue"':!0},'"Brightness": {\n    "type": "RangeAction",\n    "puller": "http://requestUrl=\'https://philips-hue-tres.local/api/Xex9YLRxERFf0TliilWFj3LkmjtCd2iGLmQSktYY/lights/1\';formatType=JSON;formatPath=\'$.state.bri\';formatPathType=JSONPATH;requestIgnoreSSLHosts=true;",\n    "executor": "http://requestUrl=\'http://philips-hue-tres.local/api/Xex9YLRxERFf0TliilWFj3LkmjtCd2iGLmQSktYY/lights/1/state\';requestVerb=PUT;formatType=JSON;formatPath=\'$.[0].success\';formatPathType=JSONPATH;requestIgnoreSSLHosts=true;requestBody=\'{\\"bri\\":%VAL_INT%}\'",\n    "min": "0",\n    "max": "254",\n    "step": "25"\n}\n')))}m.isMDXComponent=!0}}]);