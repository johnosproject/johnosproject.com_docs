"use strict";(self.webpackChunkjosp_docs=self.webpackChunkjosp_docs||[]).push([[3994],{28998:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var n=t(87462),i=(t(67294),t(3905)),o=t(26113);const a={title:"Permissions"},r="JOSP Permissions",c={unversionedId:"josp/specs/permissions",id:"josp/specs/permissions",title:"Permissions",description:"<WhatIntro",source:"@site/1_what/2_josp/30_specs/33_permissions.mdx",sourceDirName:"2_josp/30_specs",slug:"/josp/specs/permissions",permalink:"/what/josp/specs/permissions",draft:!1,tags:[],version:"current",sidebarPosition:33,frontMatter:{title:"Permissions"},sidebar:"docsSidebar",previous:{title:"Communication",permalink:"/what/josp/specs/comm"},next:{title:"Structure",permalink:"/what/josp/specs/structure"}},l={},p=[{value:"State",id:"state",level:2},{value:"Action",id:"action",level:2},{value:"Owner",id:"owner",level:2},{value:"None",id:"none",level:2}],d={toc:p},u="wrapper";function m(e){let{components:s,...t}=e;return(0,i.kt)(u,(0,n.Z)({},d,t,{components:s,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"josp-permissions"},"JOSP Permissions"),(0,i.kt)(o.ZP,{logo_path:"/img/logo/logo_250.png",mdxType:"WhatIntro"},(0,i.kt)("p",null,"The JOSP EcoSystem has his own access control system.",(0,i.kt)("br",null),"\nThis ",(0,i.kt)("strong",{parentName:"p"},"access control system is based on JOSP Permission and each JOSP Object has his own permission tables"),".\nEach permission is a tuple that define which access level is granted to a JOSP Service/User pair for accessing to the object.")),(0,i.kt)("br",null),(0,i.kt)("p",null,"Every time a JOSP Object interact with a JOSP Service, ",(0,i.kt)("strong",{parentName:"p"},"the object checks service/user's access level"),".\nDepending on interaction type (status update, action execution or object configuration) and the access level granted (STATE, ACTION, OWNER) the object can proceed or avoid the interaction."),(0,i.kt)("p",null,"Each time a JOSP Service connect to a JOSP Object, ",(0,i.kt)("strong",{parentName:"p"},"the service presents itself and his current user"),".\nSo, objects always know which service/user would access to the object and looking for them on object's permissions list.",(0,i.kt)("br",null),"\nIf no user is currently logged into JOSP Service, then it presents itself to objects as a service with anonymous user.\nWhen a JOSP Object can't find a valid permission to the service/user pair, it assigns the NONE access level to that pair."),(0,i.kt)("p",null,"Because, the JOSP EcoSystem allow different type of communication between objects and services (mainly ",(0,i.kt)("a",{parentName:"p",href:"comm#direct"},"direct")," or ",(0,i.kt)("a",{parentName:"p",href:"comm#cloud"},"via cloud"),"), ",(0,i.kt)("strong",{parentName:"p"},"a JOSP Permission can be set to be used only on direct or also for cloud communications"),".\nEach permission contains the ",(0,i.kt)("inlineCode",{parentName:"p"},"connType")," field, that determinate if the permission must be used when service is connected directly to the object; or also when service is connected via cloud.\nThis field allows setup specific behaviours like grant users ACTION permission when they are near the objects (on the same local network) and grant only the STATUS permission when user are connected from remote location."),(0,i.kt)("p",null,"With the aim to make this access system more flexible to user needs, we added some ",(0,i.kt)("strong",{parentName:"p"},"'jolly' value to define JOSP Permissions"),".",(0,i.kt)("br",null),"\nPermissions can define the service and user to be applied to with the two fields ",(0,i.kt)("inlineCode",{parentName:"p"},"srvId")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"usrId"),".\nThose fields can accept, as you can guess, respectively service and user ids but, they can accept also other special values:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'srvId="#All"')," the permission is applied to all services"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'usrId="#All"')," the permission is applied to any user"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'usrId="#Owner"')," the permission is applied to object's owner")),(0,i.kt)("p",null,"Use those values instead service and user ids, allow you to define 'jolly' permission that can be applied to multiple service/users pairs.\nFor example, you can grant the access to an object defining a permission with a specific user's id and the ",(0,i.kt)("inlineCode",{parentName:"p"},"#All")," value as service id.\nThis permission will grant the access to the JOSP Object at specified user independently of the JOSP Service used.",(0,i.kt)("br",null),"\nAt the same time, you can define a permission with a specific service's id and the ",(0,i.kt)("inlineCode",{parentName:"p"},"#All")," value as user id.\nIn this case anybody can access to the JOSP Object as long as he is using specified JOSP Service."),(0,i.kt)("h2",{id:"state"},"State"),(0,i.kt)("p",null,"This access level on an object allow service/users get object's structure and all his statues' values."),(0,i.kt)("h2",{id:"action"},"Action"),(0,i.kt)("p",null,"This access level on an object allow service/users get object's structure, all his statues' values and send action requests to the object."),(0,i.kt)("h2",{id:"owner"},"Owner"),(0,i.kt)("p",null,"This access level on an object allow service/users get object's structure, all his statues' values, send action requests to the object and  configure the object."),(0,i.kt)("h2",{id:"none"},"None"),(0,i.kt)("p",null,"This access level on an object don't grant any permission for current service/users pair."))}m.isMDXComponent=!0},26113:(e,s,t)=>{t.d(s,{ZP:()=>c});var n=t(87462),i=(t(67294),t(3905)),o=t(41181);const a={toc:[]},r="wrapper";function c(e){let{components:s,...t}=e;return(0,i.kt)(r,(0,n.Z)({},a,t,{components:s,mdxType:"MDXLayout"}),(0,i.kt)(o.ZP,{container:!0,spacing:4,mdxType:"Grid"},(0,i.kt)(o.ZP,{item:!0,xs:2,mdxType:"Grid"},(0,i.kt)("img",{src:t.logo_path,width:"200"})),(0,i.kt)(o.ZP,{item:!0,xs:10,mdxType:"Grid"},(0,i.kt)("div",null,t.children))))}c.isMDXComponent=!0}}]);